name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint & Format Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format:check

  type-check:
    runs-on: ubuntu-latest
    name: TypeScript Type Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run db:generate

      - name: Run type check
        run: npm run type-check

  build:
    runs-on: ubuntu-latest
    name: Build Application
    needs: [lint, type-check]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run db:generate

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: 'postgresql://user:password@localhost:5432/test'
          NEXTAUTH_SECRET: 'test-secret'
          NEXTAUTH_URL: 'http://localhost:3000'

  # Uncomment when tests are added
  # test:
  #   runs-on: ubuntu-latest
  #   name: Run Tests
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'
  #
  #     - name: Install dependencies
  #       run: npm ci
  #
  #     - name: Generate Prisma Client
  #       run: npm run db:generate
  #
  #     - name: Run unit tests
  #       run: npm run test
  #
  #     - name: Upload coverage
  #       uses: codecov/codecov-action@v4
  #       if: always()
